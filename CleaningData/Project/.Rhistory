xx <- c(0,3,6,9,12,15,22)
m(xx)
m <- function(x){10*.5^(x/3)}
m(xx)
130*log(.85)/log(.5)
200/125/log(1.045)
log(1.045)
log(200/125)/log(1.045)
45*.93^(10/3)
2.25/2/2
m <- function(x){18*.5^(x/5)}
xx <- c(0,5,10,15,25,18)
m(xx)
3.14*3
pi/4
y <- function(x){2*tan(2*x)}
y(pi)
y(pi/4)
y(pi/2)
y(3*pi/4)
3*pi/4
y <- function(x){5*tan(.1*x)}
5*pi
15*pi
2+5*cos(pi/10*(7.8-3))
(20 pi +3 pi-10 acos(4/5))/pi
(20*pi +3*pi-10*acos(4/5))/pi
2+5*cos(pi/10*(20.9516-3))
(3*pi-10*acos(4/5))/pi
2+5*cos(pi/10*(0.9516724-3))
-2+4*cos(pi/2*(7.8-3))
2/pi*asin(2)
-2+4*cos(pi/2*(7.8-.3))
sqrt(3)/2
sin(4*pi/3)
sin(5*pi/3)
atan(4/3)
sin(atan(4/3))
v1 <- function(r,theta,t){r*theta/t}
8*pi
3950*pi/12
3950*cos(30*pi/180)
3950*cos(30*pi/180)*pi/12
3950*cos(30.267222*pi/180)
3950*cos(30.267222*pi/180)*pi/12
sin(68*pi/180)*92/sin(44*pi/180)
2*sin(68*pi/180)*92/sin(44*pi/180)-92
install.packages(c("Rcpp", "sp"))
sin(68)
sin(68*pi/180)
sin(68*pi/180)/sin((180-68-68)*pi/180)*92
2*sin(68*pi/180)/sin((180-68-68)*pi/180)*92
2*sin(68*pi/180)/sin((180-68-68)*pi/180)*92 - 92
sqrt(170^2+250^2 - 2*170*250*cos((180-46)*pi/180))
d <- function(t){6/1.490^t}
d(c(3,1))/(3-1)
(d(3)-d(1))/(3-1)
(d(3)-d(2))/(3-2)
(d(3)-d(2.5))/(3-2.5)
sqrt(110^2+95^2 - 2*110*95*cos(38*pi/180))
3950*cos(38.895*pi/180)*pi/12
install.packages("Rcpp")
?ggplot
library(ggplot2)
?ggplot
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30))
ds <- ddply(df, .(gp), summarise, mean = mean(y), sd = sd(y))
library(plyr)
ds <- ddply(df, .(gp), summarise, mean = mean(y), sd = sd(y))
ggplot(df)
ggplot(df, aes(x = gp, y = y))
?histogram
?qplot
qplot(df)
qplot(y~gp, df)
qplot(y~gp, data=df)
qplot(df$gp, df$y)
setwd("C:/Users/robertc/Desktop/R/EdxSaber/Final")
data.url <- "https://courses.edx.org/asset-v1:BUx+SABR101x+2T2015+type@asset+block/Fielding_06-10.csv"
data.file <- "Fielding_06-10.csv"
download.file(data.url, data.file)
data <- read.csv(data.file)
View(data)
data.sub1 <- subset(data, Pos != 'C')
View(data)
cor(data.sub1$UZR, data.sub1$DRS)
cor(data.sub1$TZL, data.sub1$DRS)
cor(data.sub1$TZL, data.sub1$UZR)
cor(data.sub1[,c("UZR","DRS","TZL")])
data.sub1$Name[which.min(data.sub1$DRS + data.sub1$UZR)]
data.sub1.mod1 <- lm(DRA~UZR+TZL, data=data.sub1)
data.sub1.mod1 <- lm(DRS~UZR+TZL, data=data.sub1)
data.sub1.mod1
summary(data.sub1.mod1)
-.022074 + 6*.005478
15/20
.5*162
.75*162
15 + (162-20)*.5
0.4711-0.2534
0.4995-0.2534
0.4995-0.8986
0.4384-0.8986
400^2/(400^2+500^2)
500^2/(400^2+500^2)
800^2/(800^2+700^2)
?strsplit
q1.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
q1.file <- "ss06hid.csv"
setwd("C:/Users/robertc/Desktop/R/CourseraJohnHopkins/CourseraJohnHopkinsDataScience/CleaningData/Week4")
download.file(q1.url, q1.file)
q1.data <- read.csv(q1.file)
names(q1.data)
q1 <- strsplit(names(q1.data), "wgtp")
q1
q2.url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
q2.file = "GDP.csv"
download.file(q2.url, q2.file)
q2.data <- read.csv(q2.file, header=F, skip=5,
col.names = c("CountryCode","Ranking","v1","Country","GDP","v2","v3","v4","v5","v6"))
q2.data.t <- q2.data[1:190, c("CountryCode","Ranking","Country","GDP")]
q2.data.t
?grep
grep("^United",countryNames)
grep("^United",q2.data.t$Country)
q2.data.t[c(1,6,32),]
grep("United$",countryNames), 3
grep("United$",q2.data.t$Country)
grep("United",q2.data.t$Country)
grep("*United",q2.data.t$Country)
q4.url1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
q4.file1 = "GDP.csv"
q4.url2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
q4.file2 = "EDSTATS_Country.csv"
download.file(q4.url1,q4.file1)
download.file(q4.url2,q4.file2)
q4.gdp <- read.csv(q4.file1,header=F,skip=5,
col.names = c("CountryCode","Ranking","v1","Country","GDP","v2","v3","v4","v5","v6"))
q4.ed <- read.csv(q4.file2)
q4.gdp.t <- q4.gdp[1:190, c("CountryCode","Ranking","Country","GDP")]
q4.gdp.t$Ranking <- as.numeric(as.character(q4.gdp.t$Ranking))
q4.merged <- merge(q4.ed, q4.gdp.t, by="CountryCode")
head(q4.merged[order(q4.merged$Ranking, decreasing = T),],13)
View(q4.merged)
View(q4.gdp)
View(q4.ed)
grep("Fiscal Year End",q4.merged$Special.Notes)
grep("^Fiscal Year End",q4.merged$Special.Notes)
,q4.merged$Special.Notes
q4.merged$Special.Notes
grep("^Fiscal Year End",q4.merged$Special.Notes, ignore.case=TRUE)
grep("^Fiscal Year End*June",q4.merged$Special.Notes, ignore.case=TRUE)
grep("^Fiscal Year End: June",q4.merged$Special.Notes, ignore.case=TRUE)
grep("June",q4.merged$Special.Notes, ignore.case=TRUE)
q4.merged[grep("June",q4.merged$Special.Notes, ignore.case=TRUE)]$Special.Notes
q4.merged[grep("June",q4.merged$Special.Notes, ignore.case=TRUE),]$Special.Notes
grep("^Fiscal Year End: June",q4.merged$Special.Notes, ignore.case=TRUE)
grep("June",q4.merged$Special.Notes, ignore.case=TRUE)
grep("Fiscal Year End: June",q4.merged$Special.Notes, ignore.case=TRUE)
install.packages("quantmod ")
install.packages("quantmod")
amzn <- getSymbols("AMZN",auto.assign=FALSE)
require(quantmod)
amzn <- getSymbols("AMZN",auto.assign=FALSE)
amzn
?index
sampleTimes <- index(amzn)
sampleTimes
q5a <- sum(sampleTimes >= "2012-01-01" & sampleTimes <= "2012-12-31")
q5a
?day
sum(format(sampleTimes, format='%A') == "Monday")
sum(format(sampleTimes, format='%A') == "Monday" && format(sampleTimes, format='%y' == 12))
sum(format(sampleTimes, format='%A') == "Monday" && format(sampleTimes, format='%y') == 12)
format(sampleTimes, format='%y')
sum(format(sampleTimes, format='%A') == "Monday" && format(sampleTimes, format='%y') == "12")
format(sampleTimes, format='%y') == "12"
sum(format(sampleTimes, format='%A') == "Monday" & format(sampleTimes, format='%y') == "12")
q5b <- sum(format(sampleTimes, format='%A') == "Monday" & format(sampleTimes, format='%y') == "12")
data.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data.file <- "harDataSet.zip"
download.file(data.url, data.file)
data.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data.file <- "harDataSet.zip"
?unzip
unzip(data.file)
setwd("C:/Users/robertc/Desktop/R/CourseraJohnHopkins/CourseraJohnHopkinsDataScience/CleaningData/Project")
download.file(data.url, data.file)
unzip(data.file)
data.train.x <- read.table('/UCI HAR Dataset/train/X_train.txt', sep=" ")
data.train.x <- read.table('UCI HAR Dataset/train/X_train.txt', sep=" ")
data.train.x <- read.table('UCI HAR Dataset/train/X_train.txt', sep=" ")
data.train.x <- read.table('UCI HAR Dataset\train\X_train.txt', sep=" ")
data.train.x <- read.table('UCI HAR Dataset\\train\\X_train.txt', sep=" ")
data.train.y <- read.table('UCI HAR Dataset/train/Y_train.txt', sep=" ")
data.test.x <- read.table('UCI HAR Dataset/test/X_test.txt', sep=" ")
data.test.y <- read.table('UCI HAR Dataset/test/Y_test.txt', sep=" ")
?read.table
data.train.x <- read.table('UCI HAR Dataset/train/X_train.txt')
View(data.train.x)
data.train.y <- read.table('UCI HAR Dataset/train/Y_train.txt')
data.test.y <- read.table('UCI HAR Dataset/test/Y_test.txt')
data.test.x <- read.table('UCI HAR Dataset/test/X_test.txt')
data.features <- read.table('UCI HAR Dataset/features.txt')
data.features
?colnames
data.features$V2
colnames(data.train.x) <- data.features$V2
colnames(data.test.x) <- data.features$V2
View(data.test.x)
data.features$V2
M <- rbind(c(0,0,0),c(.5,0,0),c(.5,1,1))
M
.7*M + .1
A <- .7*M + .1
A %^% 10
A*A*A*A*A
A*A*A*A*A*A*A
A*A*A*A*A*A*A*A*A*A*A*A
r <- cbind(c(1/3,1/3,1/3))
r
r*A
A*r
A
r
A%*%r
A %*% A
A %*% A %*% A %*% A %*% A %*% A %*% r
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r * 3
p = A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r * 3
p
p[1]
p[1] + p[3]
?eigen
A
eigen(A)
e <- eigen(A)
e[,1]
e
e[,1]
e$vectors[,1]
e$vectors[1,1]/sum(e$vectors[,1])
e$vectors[2,1]/sum(e$vectors[,1])
e$vectors[3,1]/sum(e$vectors[,1])
p
p[2] + p[3]
A <- cbind(c(0,1/2,1/2,0,0,1,1,0,0))
A
A <- cbind(c(0,1/2,1/2,0,0,1,1,0,0),3,3)
A
A <- cbind(c(0,1/2,1/2),c(0,0,1),c(1,0,0))
A
b <- .85
n <- 3
M <- b*A + (1-b)/n
M
e <- eigen(M)
e
p <- e$vectors[,1]/sum(e$vectors[,1])
p
sum(p)
r
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r * 3
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r
A
M <- cbind(c(0,1/2,1/2),c(0,0,1),c(1,0,0))
M
A <- b*M + (1-b)/n
A
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r
p
.475/.05
.21/.39
M
A
b
.475*2
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% r
A %*% A %*% A %*% A %*% A %*% A %*%  A %*%  A %*%  A %*% (r*3)
A %*% A %*% A %*% A %*% A %*% (r*3)
M %*% M %*% M %*% M %*% M %*% (r*3)
5/4
9/16
11/16
M %*% M %*% M %*% M %*% (r*3)
eigen(M)
p <- eigen(M)$vectors[,1]/sum(eigen(M)$vectors[,1])
p
M %*% M %*% M %*% M %*%  M %*%  M %*%  M %*%  M %*% (r*3)
M %*% M %*% M %*% M %*%  M %*%  M %*%  M %*%  M %*% (r)
M
M %*%  M %*%  M %*%  M %*%  M
M %*%  M %*%  M %*%  M %*%  M * r*3
M %*%  M %*%  M %*%  M %*%  M %*% r*3
9/16
11/16
M
A
n
b
eigen(A)
l <- eigen(A)$vectors[,1]
l
z <- l / sum(l)
z
A
M
.475/.9
.05/.9
A*e
A*3
A*2
z
M
A
z
b;n;
b*M + b/n
b*M
b*M + (1-b)/n
M;A;b;n
t(M)
eye(1)
i2 <- cbind(c(1,0),c(0,1))
i2
i2 %*% t(i2)
i2
t(i2)
c(1,0)
cbind(c(1,0)) %*% t(cbind(c(1,0)))
M;A;b;n
M
M;A;b;n
.85*.5
b*M
(1-b)/n
b*M + (1-b)/n
1/.85
.85*.575
rm(i2,M,r,b,e,l)
rm(p,z,n)
data.all <- rbind(data.train.x, data.test.x)
data.features$V2
feature.names.meanOrStd <- c(grep("mean", feature.names),grep("std",feature.naems))
feature.names <- data.features$V2
feature.names.meanOrStd <- c(grep("mean", feature.names),grep("std",feature.naems))
feature.names.meanOrStd <- c(grep("mean", feature.names),
grep("std",feature.names))
feature.names.meanOrStd
feature.names.meanOrStd <- feature.names[c(grep("mean", feature.names),
grep("std",feature.names))]
feature.names.meanOrStd
data.features <- read.table('UCI HAR Dataset/features.txt', stringsAsFactors=F)
feature.names <- data.features$V2
feature.names.meanOrStd <- feature.names[c(grep("mean", feature.names),
grep("std",feature.names))]
feature.names.meanOrStd
colnames(data.train.x)
colnames(data.train.x) <- feature.names
colnames(data.test.x) <- feature.names
data.all <- rbind(data.train.x, data.test.x)
View(data.all)
View(data.features)
data.train.sub <- read.table('UCI HAR Dataset/train/subject_train.txt')
data.test.sub <- read.table('UCI HAR Dataset/test/subject_test.txt')
data.activities <- read.table('UCI HAR Dataset/acitivity_lables.txt', stringsAsFactors=F)
data.activities <- read.table('UCI HAR Dataset/activity_labels.txt', stringsAsFactors=F)
View(data.activities)
?merge
unique(data.train.y)
merge(data.train.y, data.activities, by=V1)
merge(data.train.y, data.activities, by="V1")
head(merge(data.train.y, data.activities, by="V1"))
head(data.train.y)
head(data.activities)
str(data.activities)
str(data.train.y)
head(merge(data.train.y, data.activities, by="V1",all.x=TRUE))
zz <- merge(data.train.y, data.activities, by="V1",all.x=TRUE)
head(zz,100)
unique(zz$V1)
head(merge(data.activities, data.train.y, by="V1",all.y=TRUE))
rm(zz)
View(data.activities)
str(data.activities)
str(data.train.y)
head(merge(data.activities, data.train.y, by="V1",all.x=TRUE))
head(merge(data.activities, data.train.y, by="V1",all=TRUE))
zz <- merge(data.train.y, data.activities, by="V1",all=T, sort=F)
head(zz,100)
head(zz,200)
head(data.train.y,200)
head(zz,200)
zz <- merge(data.train.y, data.activities, by="V1",all.x=T, sort=F)
head(zz)
head(zz,100)
unique(zz$V2)
View(zz)
zz <- merge(data.train.y, data.activities, by="V1",all.x=T, all.y=F, sort=F)
head(zz,100)
require(dplyr)
left_join(data.train.y, data.activities)
zz <- left_join(data.train.y, data.activities)
head(zz,100)
unique(zz$V2[100])
unique(zz$V2[1:100])
unique(zz$V2[1:50])
unique(data.train.y$V1[1:100])
data.activities
require(dplyr)
data.train.y.labeled <- left_join(data.train.y, data.activities)
data.test.y.labeled <- left_join(data.test.y, data.activities)
?left_join
data.train.y.labeled <- left_join(data.train.y, data.activities, by="V1")
data.test.y.labeled <- left_join(data.test.y, data.activities, by="V1")
head(data.train.y.labeled, 100)
data.train.x$subject <- data.train.sub
data.test.x$subject <- data.test.sub
data.test.y.labeled$V2
data.train.x$activity <- data.train.y.labeled$V2
data.test.x$activity <- data.test.y.labeled$V2
data.all <- rbind(data.train.x[,feature.names.meanOrStd],
data.test.x[,feature.names.meanOrStd])
View(data.all)
data.all.names <- c(feature.names.meanOrStd, "activity", "subject")
data.all <- rbind(data.train.x[,data.all.names],
data.test.x[,data.all.names])
data.all.names
View(data.train.x)
require(dplyr)
data.train.y.labeled <- left_join(data.train.y, data.activities, by="V1")
data.test.y.labeled <- left_join(data.test.y, data.activities, by="V1")
data.train.x$subject <- data.train.sub
data.test.x$subject <- data.test.sub
data.train.x$activity <- data.train.y.labeled$V2
data.test.x$activity <- data.test.y.labeled$V2
data.all.names <- c(feature.names.meanOrStd, "activity", "subject")
data.all <- rbind(data.train.x[,data.all.names],
data.test.x[,data.all.names])
View(data.test.x)
data.test.x$activity
View(data.test.x)
data.all.names
data.train.x[,"activity"]
data.train.x[,"subject"]
data.train.x[,c("subject","activity")]
data.train.x[,data.all.names]
data.test.x[,data.all.names]
str(data.test.x)
tail(str(data.test.x))
View(data.test.x)
colnames(data.test.x)
data.all.names <- c(feature.names.meanOrStd, "subject", "activity")
data.all <- rbind(data.train.x[,data.all.names],
data.test.x[,data.all.names])
rbind(data.train.x,data.train.y)
rbind(data.train.x,data.test.x)
rm(zz)
data.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
data.file <- "harDataSet.zip"
data.train.x <- read.table('UCI HAR Dataset/train/X_train.txt')
data.train.y <- read.table('UCI HAR Dataset/train/Y_train.txt')
data.train.sub <- read.table('UCI HAR Dataset/train/subject_train.txt')
data.test.x <- read.table('UCI HAR Dataset/test/X_test.txt')
data.test.y <- read.table('UCI HAR Dataset/test/Y_test.txt')
data.test.sub <- read.table('UCI HAR Dataset/test/subject_test.txt')
data.activities <- read.table('UCI HAR Dataset/activity_labels.txt', stringsAsFactors=F)
data.features <- read.table('UCI HAR Dataset/features.txt', stringsAsFactors=F)
feature.names <- data.features$V2
data.activities
feature.names
feature.names.meanOrStd <- feature.names[c(grep("mean", feature.names),
grep("std",feature.names))]
feature.names.meanOrStd
colnames(data.train.x) <- feature.names
colnames(data.test.x) <- feature.names
require(dplyr)
data.train.y.labeled <- left_join(data.train.y, data.activities, by="V1")
data.test.y.labeled <- left_join(data.test.y, data.activities, by="V1")
data.train.x$subject <- data.train.sub
data.test.x$subject <- data.test.sub
data.train.x$activity <- data.train.y.labeled$V2
data.test.x$activity <- data.test.y.labeled$V2
data.train.x$subject <- data.train.sub$V1
data.test.x$subject <- data.test.sub$V1
data.train.x$activity <- data.train.y.labeled$V2
data.test.x$activity <- data.test.y.labeled$V2
data.all.names <- c(feature.names.meanOrStd, "subject", "activity")
data.all <- rbind(data.train.x[,data.all.names],
data.test.x[,data.all.names])
View(data.all)
?ddply
ddply(data.all, c(subject,activity), colMeans)
ddply(data.all, .(subject,activity), colMeans)
?summarize
?summarise
summarise(group_by(data.all, subject, activity), colMeans
)
group_by(data.all, subject, activity)
colmeans(data.all)
colMeans(data.all)
ddply(data.all, .(subject,activity), function(x){colMeans(x)})
ddply(data.all, .(subject,activity), function(x){colMeans(x[feature.names.meanOrStd])})
zz <- ddply(data.all, .(subject,activity), function(x){colMeans(x[feature.names.meanOrStd])})
View(zz)
data.summary <- ddply(data.all,
.(subject,activity),
function(x){colMeans(x[feature.names.meanOrStd])})
?write.table
write.table(data.summary, file="data.summary.txt", row.names=F)
