qnorm(.1)
-1.281*75+1100
-1.281*75/sqrt(144)+1100
?pnorm
(1/sqrt(12))/sqrt(1000)
1/sqrt(12*1000)
.75/(1-.52)
.75*.3/(.75*.3 + (1-.52)*(1-.3))
pnorm(70,80,10)
qnorm(.95,1100,75)
qnorm(.95)
1.645*75+1100
pnorm(1220, 1100,75)
1.645*75/sqrt(100)+1100
pnorm(90, 80, 10/sqrt(5), lower.tail=FALSE)
(.012674^4)*(1-.012674)
.84*.16^4
.84*.16^4*100
(.84*.16^4 + .16^5)*100
pnorm(90,80,10)
pnorm(90,80,10,lower.tail = F)
pnorm(90,80,10,lower.tail = F)^5
1- .84^3
1- .84^2
pnorm(90,80,10,lower.tail = F)
pnorm(90,80,10,lower.tail = F)^4
pnorm(90,80,10,lower.tail = F)^4 * .84
choose(5,4)
choose(5,4)*.5 + choose(5,5)*.5
choose(5,4)*.5^5 + choose(5,5)*.5^5
choose(5,4)*.16^4*.84 + choose(5,5)*.16^5
2500^(1/3)
2500^(1/2)
150*617 + (166-150)*238
300/.425
300/.425 * 5.7
27*500
29*500
29*1500
choose(6,3)
choose(6,2)
5*5 + 4*4 + 3*3 + 2*2 + 1*1
choose(6,3)
3*3*2*1
5*5*4*3*2*1
(1030+92)/sum(c(1030,92,126,227))
install.packages(c("car", "e1071", "evaluate", "knitr", "mapproj", "maps", "UsingR"))
(6-4) + c(-1,1)*qt(.977,)
n1 <- 8
n2 <- 8
mu1 <- 6
mu2 <- 4
v1 <- 3
v2 <- 5
spsq <- (v1*n1 + v2*n2)/(n1+n2-2)
spsq <- (v1*(n1-1) + v2*(n2-1))/(n1+n2-2)
(m1-m2) + c(-1,1)*qt(.975,df=n1+n2-2)*sqrt(spsq)*sqrt(1/n1 + 1/n2)
(mu1-mu2) + c(-1,1)*qt(.975,df=n1+n2-2)*sqrt(spsq)*sqrt(1/n1 + 1/n2)
1.29^2
(2*1 + 3*1.67 + 1*4.5 + 4*4.3 + 4*2.5)/(2+3+1+4+4)
qt(.975,df=10)
qt(.995,df=10)
?rexp
?runif
?quantile
zz1 <- runif(1000)
zz1
zz2 <- rexp(1000)
zz2
plot(quantile(zz2)~quantile(zz1))
plot(quantile(zz2)~quantile(zz1),type='l')
quantile(zz1)
plot(quantile(zz2,probs=seq(0,1,.1))~quantile(zz1,probs=seq(0,1,.1)),type='l')
plot(-log(1-zz1)~zz1)
plot(1-exp(-zz1)~zz1)
1100 + c(-1,1)*qt(.975,df=8)*30/sqrt(9)
c(-1,1)*qt(.975,df=8)/sqrt(9)
6/qt(.975,df=8)/sqrt(9)
6/qt(.975,df=8)
rm(zz1,zz2)
n1=10
n2=10
mu1=3
mu2=5
v1=.6
v2=.68
spsq <- (v1*(n1-1) + v2*(n2-1))/(n1+n2-2)
(m1-m2) + c(-1,1)*qt(.975,df=n1+n2-2)*sqrt(spsq)*sqrt(1/n1 + 1/n2)
(mu1-mu2) + c(-1,1)*qt(.975,df=n1+n2-2)*sqrt(spsq)*sqrt(1/n1 + 1/n2)
1100 + c(-1,1)*qt(.975,df=8)*30/sqrt(9)
zz1 <- runif(1000)
zz2 <- rexp(1000)
plot(quantile(zz1,probs=seq(0,1,.1))~quantile(zz2,probs=seq(0,1,.1)),type='l')
zz1 <- rnorm(1000)
plot(quantile(zz1,probs=seq(0,1,.1))~quantile(zz2,probs=seq(0,1,.1)),type='l')
qqplot
qqplot(zz1,zz2)
qqplot(zz2,zz1)
qqplot(zz1,zz1)
qqplot(zz1,zz1*4 + 2)
qqplot(zz2,zz2*4 + 2)
qnorm(.975)
.65 + c(-1,1)*qnorm(.975)*sqrt(.65*(1-.65)/20)
p <- 43/100
a <- .5
b <- .5
p^(a-1) * (1-p)^(b-1)
install.packages("binom")
library(binom)
binom.bayes(43,100,prior, type="highest")
binom.bayes(43,100, type="highest")
?binom.bayes
n<-100
x<-43
p^(x+a-1) * (1-p)^(x+b-1)
p^(x+a-1) * (1-p)^(n-x+b-1)
p^(x+a-1) * (1-p)^(n-x+b-1) * choose(43,100)
p^(x+a-1) * (1-p)^(n-x+b-1) * choose(100,43)
?runif
zz <- runif(100)
zz2 <- log(zz)
mm <- mean(zz2)
e^mm
exp(mm)
aa <- 1
sapply(zz, function(x){aa = aa*x})
aa
rm(aa)
prod(zz)
prod(zz)^(1/100)
exp(mm)
1/exp(1)
zz <- runif(1000)
zz2 <- log(zz)
mm <- mean(zz2)
e^mm
exp(mm)
1/exp()
1/exp(1)
prod(zz)^(1/1000)
prod(zz)
exp(.5)
exp(log(.5))
lognormal(5,1)
??lognormal
Lognormal(5,1)
library(stats)
Lognormal(5,1)
rlnorm(100,meanlog=5,sdlog=1)
rnorm(100,mean=exp(5), sd=exp(1))
14/30
rlnorm(100,meanlog=5,sdlog=1)
zz <- rlnorm(100,meanlog=5,sdlog=1)
prod(zz)^(1/100)
e^5
exp(5)
zz <- rlnorm(100,meanlog=5,sdlog=1)
prod(zz)^(1/100)
exp(5.5)
g1 <- function(x) {3/2*x^(2/3)-1/2}
g1(1/8)
1/8
g2 <- function(x) {1/2 - 3/2*(-x)^(2/3)}
g2(-1/8)
g1(0.16392)
g2(g1(0.16392))
g1(g2(g1(0.16392)))
install.packages(c("MatrixModels", "scales"))
install.packages("installr") # install
setInternet2(TRUE) # saves some troubles
installr::updateR() # updating R.
current <- c(200, 120, 180)
sum(current)
t <- rbind(c(.8,.2,.1),c(.1,.7,.3),c(.1,.1,.6))
t
current %*% t
.404*500
t <- cbind(c(.8,.2,.1),c(.1,.7,.3),c(.1,.1,.6))
t
current %*% t
.316*500
.280*500
f1 <- current %*% t
f2 <- current %*% f1
f2 <- current %*% f1/500
f2 <- f1 %*% t
f3 <- f2 %*% t
f4 <- f3 %*% t
f5 <- f4 %*% t
f6 <- f5 %*% t
f7 <- f6 %*% t
f8 <- f7 %*% t
f9 <- f8 %*% t
f10 <- f9 %*% t
current
transpose(current)
t(current)
f10
current %*% t %*% t %*% t %*% t %*% t %*% t %*% t %*% t %*% t %*% t
sum(f10)
install.packages("expm")
require(expm)
current %*% t *^* 10
current %*% (t *^* 10)
current %*% (t %^% 10)
current %*% t %^% 10
current %*% (t %^% 10)
require(eigen)
install.packages("eigen")
eigen(t)
?eigen
z <- eigen(t)
zz[1,]
z[1,]
z
z[1,]
z[1,:]
z[1,1:3]
z[1,1]
z(1,)
z$vectors
z$vectors[1,]
tt <- z$vectors[1,]
current %*% tt
tt <- z$vectors[,t]
tt
tt <- z$vectors[,1]
tt
current %*% tt
f10
current %*% z$vectors
t
t %*% tt
tt
eigen(t(t))
t
t(t)
z <- eigen(t(t))
tt <- z$vectors[,1]
tt
t %*% tt
current %*% tt
f10
tt
current * tt
diag(z$values)
z$vectors
z$vectors ^ (-1)
tt
tt * t
tt %*% t
tt
z
t %*% tt
t %*% tt * 500
tt
t
t
z <- eigen(t)
z
tt <- z$vectors[,1]
tt
t %*% tt
t
f10
f10p <- f10 / 500
f10p
t %*% ff10
t %*% f10p
t %*% t(f10p)
sum(f10p)
sum(f10)
t
z <- eigen(t)
z
View(f1)
f <- current * A %^% 10
f <- current * t %^% 10
f
f <- current %*% (t %^% 10)
f
f10
f <- current %*% (t %^% 100)
f
f/500
t %*% (f/500)
t %*% t(f/500)
t
t2 <- t(t)
t2
eigen(t2)
eigen(t2)$vectors[,1]
-.7448/sum(-.7448-.5793-.33105)
-.5793/sum(-.7448-.5793-.33105)
t
t
t %^% 100
t %^% 10
t %^% 17
t <- rbind(c(.5,.25),c(.5,.75))
t
eigen(t)
.44/(.44+.89)
.4472136/(.4472136+.8944272)
.8944272/(.4472136+.8944272)
z <- eigen(t)
z
z$vectors[,1]
t %*% z$vectors[,1]
t %*% c(1/3, 2/3)
t %*% c(2/3, 1/3)
t %^% 10
t <- rbind(c(.9,.5),c(.1,.5))
t %^% 10
eigen(t)
.9895807/(.9895807 + .1961161)
.1961161/(.9895807 + .1961161)
1/6
5/6
t %^% 100
install.packages(c("MASS", "rmarkdown"))
install.packages("MASS")
4^3 - 6*^2  + 8.5*4
4^3 - 6*4^2  + 8.5*4
x <- c(2,4,6,8,10)
y <- c(4,9,14,19,24)
plot(y~x, type='l')
x1 <- c(1,3,5,7,9)
y1 <- c(15,5,19,57,119)
plot(y1~x1, type='l')
x2 <- c(1,3,5,7)
y2 <- c(15,135,1215,10935)
plot(y2~x2, type='l')
sqrt(5/3)
2*sqrt(5)/3
2*sqrt(5*2)/3
2*sqrt(5*3)/3
4*12*38
4*12*28
48*2
48^2
48^2 - 4*(-12)*(-28)
960/2
2*sqrt(5)/3
sqrt(5/3)
(0-2)^3 - 1
x <- c(1,3,5,7,9)
y <- c(15,5,19,57,119)
plot(y~x, type='l')
x <- c(2.9,6.1,14.9,28.9,37.2)
y <- c(1,2,5,10,12)
lm(y~x)
1.5/.329
2.5/.329
3.5/.329
x <- c(-40,-20,0,20,40,60,80)
y <- c(19.15,20.79,22.43,24.08,25.72,27.36,29.00)
plot(y~x)
lm(y~x)
mod <- lm(y~x)
predict(mod,newdata=c(.1,.01,.001,.0001))
?predict
predict(mod,x=c(.1,.01,.001,.0001))
predict(mod,x=c(.1,.01,.001,.0001,.00001,.000001))
ff <- function(x) {(x-22.43357)/.08211}
ff(c(.1,.01,.001,.0001,.00001,.000001))
x <- c(57.9,108.2,149.6,228,778.5,1433.3,2872.6,4493.6)
y <- c(.24,.61,1,1.88,11.86,29.46,84.01,164.79)
plot(y~x)
plot(log(y)~x)
plot(y~log(x))
plot(y~x)
sqrt(20)/2
sqrt(5)
x <- c(1910,1920,1930,1940,1950,1960,1970,1980,1990,2000)
y <- c(92.23,106.02,123.2,132.16,151.33,179.32,203.3,226.54,248.72,281.42)
plot(x~y)
plot(y~x)
mod <- lm(y~x)
mod
summary(mod)
predict(mod)
z <- predict(mod)
sum((y-x)^2)
mod2 <- lm(y~x*x)
summary(mod2)
mod3 <- lm(y~e(x))
mod3 <- lm(y~exp(x))
plot(x~y, type="l")
x1 <- c(1,2,3,4,5,6,7,8,9,10)
lm(y~x1)
mod4 <- lm(y~x1)
summary(mmod)
summary(mod)
mod4 <- lm(y~x1*x1)
summary(mod4)
plot(y~x, type="l")
plot(y~x1, type="l")
abline(mod)
plot(y~x1*x1, type="l")
x1*x1
exp(x1)
plot(y~exp(x1), type="l")
plot(y~x)
plot(y~x,type="l")
summary(lm(y+x^2))
summary(lm(y~x^2))
mod$residuals
plot(mod$residuals~x)
plot(mod2$residuals~x)
plot(mod4$residuals~x)
x <- c(2,4,6,8,10)
y <- c(900,100,11.11111111,1.2345678,.1371)
plot (y~x)
plot (y~x,type="l")
x <- c(1,3,5,7,9)
y <- c(352,136,64,136,352)
plot (y~x,type="l")
x <- c(2,4,6,8,10)
y <- c(5.6,44.8,151.2,358.4,700)
plot (y~x,type="l")
y1 <- 2^x
plot (y1~x)
plot (y1~x,type="l")
y2 <- exp(x)
plot (y2~x,type="l")
540-49*11
2^8
2^(5/3)
8/3
16^(1/3)
seq(0,3.1,by=.1)
t <- seq(0,3.1,by=.1)
ft <- 1/t
plot(ft~t)
plot(ft~t,type="l")
t <- seq(1,3,by=.1)
plot(ft~t,type="l")
ft <- 1/t
plot(ft~t,type="l")
sum(1/seq(1,2,by=.1))*.1
log(2)
seq(1,2,by=.1)
1/seq(1,2,by=.1)
sum(1/seq(1.1,2,by=.1))*.1
seq(1.1,2,by=.1)
ln(2)
log(2)
ln(3)
log(3)
exp(1)
log(.85)*5700/log(2)
365/13
13*log(2)/365
13/365 + 1
2000*1.09^10
seq(0,370,by=13)
y <- 1000*2^(seq(0,370,by=13)/365*365/13)
-log(2)/31
230/57.5
1.25/2/2
m <- function(x){.5^(x/3)}
m <- function(x){6*.5^(x/3)}
xx <- c(0,3,6,9,12,15,22)
m(xx)
m <- function(x){10*.5^(x/3)}
m(xx)
130*log(.85)/log(.5)
200/125/log(1.045)
log(1.045)
log(200/125)/log(1.045)
45*.93^(10/3)
2.25/2/2
m <- function(x){18*.5^(x/5)}
xx <- c(0,5,10,15,25,18)
m(xx)
install.packages(c("jsonlite", "sp"))
q1.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
q1.file <- "ss06hid.csv"
download.file(q1.url,q1.file)
q1.data <- read.csv(q1.file)
q2.url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
q2.file = "GDP.csv"
download.file(q2.url, q2.file)
setwd("C:/Users/robertc/Desktop/R/CourseraJohnHopkins/CourseraJohnHopkinsDataScience/CleaningData/Week4")
q1.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
q1.file <- "ss06hid.csv"
download.file(q1.url, q1.file)
q1.data <- read.csv(q1.file)
#--------------------------
# q2
#--------------------------
q2.url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
q2.file = "GDP.csv"
download.file(q2.url, q2.file)
q2.data <- read.csv(q2.file, header=F, skip=5,
col.names = c("CountryCode","Ranking","v1","Country","GDP","v2","v3","v4","v5","v6"))
View(q2.data)
q3.data.t <- q3.data[1:190, c("CountryCode","Ranking","Country","GDP")]
q2.data.t <- q2.data[1:190, c("CountryCode","Ranking","Country","GDP")]
View(q2.data.t)
as.numeric(as.character(q2.data.t$GDP))
sub(as.character(q2.data.t$GDP), ",","")
sub(as.character(q2.data.t$GDP), ",","z")
as.character(q2.data.t$GDP)
sub(",", "", as.character(q2.data.t$GDP))
as.numeric(sub(",", "", as.character(q2.data.t$GDP)))
View(q2.data.t)
?sub
as.numeric(gsub(",", "", as.character(q2.data.t$GDP)))
q2 <- mean(as.numeric(gsub(",", "", as.character(q2.data.t$GDP))))
q2
