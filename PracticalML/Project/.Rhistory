getwd()
setwd("C:/Users/robertc/Desktop/R/datasciencecoursera/PracticalML/Project")
dir()
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
head(training)
str(training)
colnames(training)
head(training[,"classe"])
sort(colnames(training))
set.seed(1002)
#try performing pca to determine which features may matter
pp <- preProcess(training,method="pca", thresh=.8)
pp$numComp
library(caret)
pp <- preProcess(training,method="pca", thresh=.8)
pp$numComp
str(training)
set.seed(1002)
#try performing pca to determine which features may matter
pp <- preProcess(training[,-c(2)],method="pca", thresh=.8)
?str
View(training)
str(training, list.len=q60)
str(training, list.len=160)
?read.csv
head(training,1)
?preProcess
c(1:3,4,5)
head(training[,c("x")])
head(training[,c("user_name")])
c(1,2,3,
4,5,6)
cols <- c("roll_belt","pitch_belt","yaw_belt", +
"gyros_belt_x","gyros_belt_y","gyros_belt_z", +
"accel_belt_x","accel_belt_y","accel_belt_z", +
"magnet_belt_x","magnet_belt_y","magnet_belt_z", +
"roll_arm","pitch_arm","yaw_arm","total_accel_arm", +
"gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x", +
"accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y", +
"magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell", +
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z", +
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z", +
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z", +
"roll_forearm","pitch_forearm","yaw_forearm", +
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z", +
"accel_forearm_x","accel_forearm_y","accel_forearm_z", +
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
#try performing pca to determine which features may matter
pp <- preProcess(training[,cols],method="pca", thresh=.8)
head(training[,cols])
cols <- c("roll_belt","pitch_belt","yaw_belt", +
"gyros_belt_x","gyros_belt_y","gyros_belt_z", +
"accel_belt_x","accel_belt_y","accel_belt_z", +
"magnet_belt_x","magnet_belt_y","magnet_belt_z", +
"roll_arm","pitch_arm","yaw_arm","total_accel_arm", +
"gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x", +
"accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y", +
"magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell", +
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z", +
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z", +
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z", +
"roll_forearm","pitch_forearm","yaw_forearm", +
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z", +
"accel_forearm_x","accel_forearm_y","accel_forearm_z", +
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm","total_accel_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x",
"accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y",
"magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
pp <- preProcess(training[,cols],method="pca", thresh=.8)
pp
m2 <- train(classe~.,data=training[,c(cols,"classe")], method="glm", preProcess="pca",
trControl = trainControl(preProcOptions = list(thresh = 0.8)))
warnings()
tt <-training[,cols]
View(tt)
m2 <- train(classe~.,data=training[,c(cols,"classe")], method="rf", preProcess="pca",
trControl = trainControl(preProcOptions = list(thresh = 0.8)))
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(1002)
#cols of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm","total_accel_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x",
"accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y",
"magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
pp <- preProcess(training[,c(cols,"classe")],method="pca", thresh=.8)
str(training,list.len=160)
head(as.numeric(training[,"classe"])
)
training$classe <- as.numeric(training$classe)
str(training,list.len=160)
pp <- preProcess(training[,c(cols,"classe")],method="pca", thresh=.8)
trainingPP <- predict(pp,training[,c(cols,"classe")])
modelFit <- train(classe~., data=trainingPP, method="rf")
View(trainingPP)
?preProcess
#Six young health participants were asked to perform one set of 10 repetitions
#of the Unilateral Dumbbell Biceps Curl in five different fashions:
# A - exactly according to the specification
# B - throwing the elbows to the front
# C - lifting the dumbbell only halfway
# D - lowering the dumbbell only halfway
# E - and throwing the hips to the front
#The goal of your project is to predict the manner in which they did the exercise
#using data from accelerometers on the belt, forearm, arm, and dumbell.
library(caret)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(1002)
#cols of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm","total_accel_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z","accel_arm_x",
"accel_arm_y","accel_arm_z","magnet_arm_x","magnet_arm_y",
"magnet_arm_z","roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
#try performing pca to determine which features may matter
#training$classe <- as.numeric(training$classe)
#pp <- preProcess(training[,c(cols,"classe")],method="pca", thresh=.8)
#trainingPP <- predict(pp,training[,c(cols,"classe")])
#modelFit <- train(classe~., data=trainingPP, method="rf")
modelFit <- train(classe~., data=training[,c(cols,"classe")], method="rf")
pp <- preProcess(training[,cols],method="pca", thresh=.8)
trainingPP <- predict(pp,training[,c(cols,"classe")])
trainingPP <- predict(pp,training[,cols])
trainingPP$classe <- training$classe
modelFit <- train(classe~., data=trainingPP, method="rf")
modelFit <- train(classe~., data=trainingPP, method="rpart")
print(modelFit)
testingPP <- predict(pp,testing[,cols])
testingPP$classe <- testing$classe
cm <- confusionMatrix(testing$classe, predict(modelFit,testingPP))
str(testingPP)
head(testingPP$classe)
#Six young health participants were asked to perform one set of 10 repetitions
#of the Unilateral Dumbbell Biceps Curl in five different fashions:
# A - exactly according to the specification
# B - throwing the elbows to the front
# C - lifting the dumbbell only halfway
# D - lowering the dumbbell only halfway
# E - and throwing the hips to the front
#The goal of your project is to predict the manner in which they did the exercise
#using data from accelerometers on the belt, forearm, arm, and dumbell.
library(caret)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(1002)
#cols of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z",
"accel_arm_x", "accel_arm_y","accel_arm_z",
"magnet_arm_x","magnet_arm_y","magnet_arm_z",
"roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
modelFit <- train(classe~., data=training[,c(cols,"classe")], method="rpart")
print(modelFit)
print(modelFit$finalModel)
p <- predict(modelFit,testing[,c(cols,"classse")])
p <- predict(modelFit,testing[,c(cols,"classe")])
head(testing[,c(cols)])
head(testing[,c(cols,"classe")])
str(testing,list.len=160)
p <- predict(modelFit,testing[,c(cols)])
p
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(p)
#Six young health participants were asked to perform one set of 10 repetitions
#of the Unilateral Dumbbell Biceps Curl in five different fashions:
# A - exactly according to the specification
# B - throwing the elbows to the front
# C - lifting the dumbbell only halfway
# D - lowering the dumbbell only halfway
# E - and throwing the hips to the front
#The goal of your project is to predict the manner in which they did the exercise
#using data from accelerometers on the belt, forearm, arm, and dumbell.
library(caret)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(1002)
#cols of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z",
"accel_arm_x", "accel_arm_y","accel_arm_z",
"magnet_arm_x","magnet_arm_y","magnet_arm_z",
"roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
modelFit <- train(classe~., data=training[,c(cols,"classe")], method="rf")
p <- predict(modelFit,testing[,c(cols)])
p
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(p)
?randomForrest
?randomForest
pp <- randomForest(classe~.,data=training[,c(cols,"classe")],ntree=50)
ppp <- predict(pp,testing[,c(cols)])
ppp
#Six young health participants were asked to perform one set of 10 repetitions
#of the Unilateral Dumbbell Biceps Curl in five different fashions:
# A - exactly according to the specification
# B - throwing the elbows to the front
# C - lifting the dumbbell only halfway
# D - lowering the dumbbell only halfway
# E - and throwing the hips to the front
#The goal of your project is to predict the manner in which they did the exercise
#using data from accelerometers on the belt, forearm, arm, and dumbell.
library(caret)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(1002)
#cols of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z",
"accel_arm_x", "accel_arm_y","accel_arm_z",
"magnet_arm_x","magnet_arm_y","magnet_arm_z",
"roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
modelFit <- randomForrest(classe~., data=training[,c(cols,"classe")], ntree=50)
p <- predict(modelFit,testing[,c(cols)])
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#pml_write_files(p)
#B A B A A E D B A A B C B A E E A B B B
#Six young health participants were asked to perform one set of 10 repetitions
#of the Unilateral Dumbbell Biceps Curl in five different fashions:
# A - exactly according to the specification
# B - throwing the elbows to the front
# C - lifting the dumbbell only halfway
# D - lowering the dumbbell only halfway
# E - and throwing the hips to the front
#The goal of your project is to predict the manner in which they did the exercise
#using data from accelerometers on the belt, forearm, arm, and dumbell.
library(caret)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(1002)
#cols of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z",
"accel_arm_x", "accel_arm_y","accel_arm_z",
"magnet_arm_x","magnet_arm_y","magnet_arm_z",
"roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
modelFit <- randomForest(classe~., data=training[,c(cols,"classe")], ntree=50)
p <- predict(modelFit,testing[,c(cols)])
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
#pml_write_files(p)
#B A B A A E D B A A B C B A E E A B B B
p
class(p)
testing2 <- testing[,c(cols)]
testing2$classe <- p
c1 <- confusionMatrix(p, testing2$classe)
c1$overall["Accuracy"]
trainingFile <- read.csv("pml-training.csv")
testingFile <- read.csv("pml-testing.csv")
set.seed(1002)
#columns of interest
cols <- c("roll_belt","pitch_belt","yaw_belt",
"gyros_belt_x","gyros_belt_y","gyros_belt_z",
"accel_belt_x","accel_belt_y","accel_belt_z",
"magnet_belt_x","magnet_belt_y","magnet_belt_z",
"roll_arm","pitch_arm","yaw_arm",
"gyros_arm_x","gyros_arm_y","gyros_arm_z",
"accel_arm_x", "accel_arm_y","accel_arm_z",
"magnet_arm_x","magnet_arm_y","magnet_arm_z",
"roll_dumbbell","pitch_dumbbell","yaw_dumbbell",
"gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z",
"accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z",
"magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z",
"roll_forearm","pitch_forearm","yaw_forearm",
"gyros_forearm_x","gyros_forearm_y","gyros_forearm_z",
"accel_forearm_x","accel_forearm_y","accel_forearm_z",
"magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
partition <- createDataPartition(trainingFile$classe, p = 0.60,list=FALSE)
training <- trainingFile[parition, c(cols,"classe")]
crossValid <- trainingFile[-parition, c(cols,"classe")]
testing <- testingFile[,c(cols)]
training <- trainingFile[partition, c(cols,"classe")]
crossValid <- trainingFile[-partition, c(cols,"classe")]
testing <- testingFile[,c(cols)]
modelFit <- randomForest(classe~., data=training, ntree=50)
cv <- predict(modelFit,crossValid)
c1 <- confusionMatrix(cv, crossValid$classe)
c1$overall["Accuracy"]
c1
print(c1)
p <- predict(modelFit,testing)
p
?plot
plot(y=trainingFile$gyros_belt_x, color=trainingFile$classe)
plot(y=trainingFile$gyros_belt_x, x=.,color=trainingFile$classe)
plot(y=trainingFile$gyros_belt_x, x=trainingFile$x,color=trainingFile$classe)
length(trainingFile$gyros_belt_x)
length(trainingFile$x)
View(trainingFile)
length(trainingFile$X)
plot(y=trainingFile$gyros_belt_x, x=trainingFile$X,color=trainingFile$classe)
plot(y=trainingFile$gyros_belt_x, x=trainingFile$X,col=trainingFile$classe)
View(trainingFile)
View(training)
str(training)
unique(training$classe)
sum(training$classe == A)
sum(training$classe == "A")
sum(training$classe == "B")
sum(training$classe == "C")
sum(training$classe == "D")
sum(training$classe == "E")
sum(training$classe == "F")
table(training$classe)
plot(y=trainingFile$gyros_belt_z, x=trainingFile$X,col=trainingFile$classe)
plot(y=trainingFile$gyros_belt_y, x=trainingFile$X,col=trainingFile$classe)
?par
par(mfrow(c(1,3)))
plot(y=trainingFile$gyros_belt_x, x=trainingFile$X,col=trainingFile$classe)
plot(y=trainingFile$gyros_belt_y, x=trainingFile$X,col=trainingFile$classe)
plot(y=trainingFile$gyros_belt_z, x=trainingFile$X,col=trainingFile$classe)
plot(y=trainingFile$gyros_belt_x, x=trainingFile$X,col=trainingFile$classe, ylab="Gyros Belt x")
?boxplot
boxplot(classe~gyros_belt_z,data=training)
boxplot(gyros_belt_z~classe,data=training)
boxplot(gyros_belt_z~classe,data=training, col=classe)
library(ggplot2)
?qplot
qplot(gyros_belt_z,classe,data=training, fill=classe,geom=c("boxplot"))
qplot(classe,gyros_belt_z,data=training, fill=classe,geom=c("boxplot"))
par(mfrow(c(1,3)))
qplot(classe,gyros_belt_x,data=training, fill=classe,geom=c("boxplot"))
qplot(classe,gyros_belt_y,data=training, fill=classe,geom=c("boxplot"))
qplot(classe,gyros_belt_z,data=training, fill=classe,geom=c("boxplot"))
par(mfrow = c(1,3))
qplot(classe,gyros_belt_x,data=training, fill=classe,geom=c("boxplot"))
qplot(classe,gyros_belt_y,data=training, fill=classe,geom=c("boxplot"))
qplot(classe,gyros_belt_z,data=training, fill=classe,geom=c("boxplot"))
?qpar
?multiplot
library(grid)
?grid.arrange
?grid
?arrange
library(gridExtra)
?grid.arrange
p1 <- qplot(classe,gyros_belt_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,gyros_belt_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,gyros_belt_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,gyros_arm_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,gyros_arm_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,gyros_arm_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,gyros_dumbell_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,gyros_dumbell_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,gyros_dumbell_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,gyros_dumbbell_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,gyros_dumbbell_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,gyros_dumbbell_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,gyros_forearm_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,gyros_forearm_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,gyros_forearm_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,accel_belt_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,accel_belt_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,accel_belt_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,accel_arm_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,accel_arm_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,accel_arm_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,accel_dumbbell_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,accel_dumbbell_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,accel_dumbbell_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,accel_forearm_x,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,accel_forearm_y,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,accel_forearm_z,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,roll_belt,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,pitch_belt,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,yaw_belt,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,roll_arm,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,pitch_arm,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,yaw_arm,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,roll_dumbbell,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,pitch_dumbbell,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,yaw_dumbbell,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
p1 <- qplot(classe,roll_forearm,data=training, fill=classe,geom=c("boxplot"))
p2 <- qplot(classe,pitch_forearm,data=training, fill=classe,geom=c("boxplot"))
p3 <- qplot(classe,yaw_forearm,data=training, fill=classe,geom=c("boxplot"))
grid.arrange(p1,p2,p3)
